{"ast":null,"code":"var _jsxFileName = \"/home/carrillosolache/Projects/robot-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport './App.css'; //class component allows you to display dynamic content\n\nclass App extends Component {\n  //state => object with properties that can br accesed from anywhere within the class\n  constructor() {\n    //super calls the crostructor method on the component and give us access to this state\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\"\n    };\n  } //renders component into dom/calls block of code\n\n\n  componentDidMount() {\n    //returns a promise/fetch users from API\n    fetch(\"https:jsonplaceholder.typicode.com/users\") //returns response in json format for JS to understand\n    .then(response => response.json()) //returns new promise with body of users arr/updates robots property with users arr\n    .then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    //distructuring allows to pull properties off of state/set them to constants inside bracket notation\n    const _this$state = this.state,\n          robots = _this$state.robots,\n          searchField = _this$state.searchField; //filter method gets a new arr based on passed in function \n\n    const filteredRobots = robots.filter(robot => //toLowecase allows search not to be caseSensative/includes checks string value is in the called string \n    robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      placeholder: \"search robots\"\n      /*setState is asynchronous, a second argument function allows to get response right after setting state*/\n      ,\n      handleChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carrillosolache/Projects/robot-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","robots","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredRobots","filter","robot","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,SAAT,QAA0B,8CAA1B;AAEA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1B;AACAI,EAAAA,WAAW,GAAG;AACZ;AACA;AACE,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIH,GATyB,CAU1B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGE;AAHF,KAIGF,IAJH,CAIQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEO;AAAV,KAAd,CAJjB;AAKD;;AAEDE,EAAAA,MAAM,GAAI;AACR;AADQ,wBAEwB,KAAKV,KAF7B;AAAA,UAEAC,MAFA,eAEAA,MAFA;AAAA,UAEQC,WAFR,eAEQA,WAFR,EAGR;;AACA,UAAMS,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAcC,KAAK,IACxC;AACAA,IAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCd,WAAW,CAACa,WAAZ,EAAlC,CAFqB,CAAvB;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC;AACZ;AAFF;AAGE,MAAA,YAAY,EAAEE,CAAC,IAAI,KAAKR,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAxB,OAAd,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EASE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAER,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AAzCyB;;AA4C5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport './App.css';\n\n//class component allows you to display dynamic content\nclass App extends Component {\n  //state => object with properties that can br accesed from anywhere within the class\n  constructor() {\n    //super calls the crostructor method on the component and give us access to this state\n    super();\n      this.state = {\n        robots: [],\n        searchField: \"\"\n      }; \n  }\n  //renders component into dom/calls block of code\n  componentDidMount() {\n    //returns a promise/fetch users from API\n    fetch(\"https:jsonplaceholder.typicode.com/users\")\n      //returns response in json format for JS to understand\n      .then(response => response.json())\n      //returns new promise with body of users arr/updates robots property with users arr\n      .then(users => this.setState({ robots: users }));\n  }\n  \n  render () {\n    //distructuring allows to pull properties off of state/set them to constants inside bracket notation\n    const { robots, searchField } = this.state;\n    //filter method gets a new arr based on passed in function \n    const filteredRobots = robots.filter(robot =>\n      //toLowecase allows search not to be caseSensative/includes checks string value is in the called string \n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        {/*onChange fires syncteric event (e) when input value is change*/ }\n      \n        <SearchBox \n          placeholder=\"search robots\"\n          /*setState is asynchronous, a second argument function allows to get response right after setting state*/          \n          handleChange={e => this.setState({ searchField: e.target.value })}\n        />\n        {/*props => parameter pass in CardList/logs out object of properties into component*/}\n        <CardList robots={filteredRobots} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}