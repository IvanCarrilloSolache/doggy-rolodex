{"ast":null,"code":"import _classCallCheck from\"/home/carrillosolache/Projects/robots-rolodex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/carrillosolache/Projects/robots-rolodex/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/carrillosolache/Projects/robots-rolodex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/carrillosolache/Projects/robots-rolodex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/carrillosolache/Projects/robots-rolodex/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{CardList}from\"./components/card-list/card-list.component\";import{SearchBox}from\"./components/search-box/search-box.component\";import'./App.css';//class component allows you to display dynamic content\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);//state => object with properties that can br accesed from anywhere within the class\nfunction App(){var _this;_classCallCheck(this,App);//super calls the crostructor method on the component and give us access to this state\n_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.state={robots:[],searchField:\"\"};return _this;}//renders component into dom/calls block of code\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//returns a promise/fetch users from API\nfetch(\"https:jsonplaceholder.typicode.com/users\")//returns response in json format for JS to understand\n.then(function(response){return response.json();})//returns new promise with body of users arr/updates robots property with users arr\n.then(function(users){return _this2.setState({robots:users});});}},{key:\"render\",value:function render(){var _this3=this;//distructuring allows to pull properties off of state/set them to constants inside bracket notation\nvar _this$state=this.state,robots=_this$state.robots,searchField=_this$state.searchField;//filter method gets a new arr based on passed in function \nvar filteredRobots=robots.filter(function(robot){return(//toLowecase allows search not to be caseSensative/includes checks string value is in the called string \nrobot.name.toLowerCase().includes(searchField.toLowerCase()));});return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\" Robots Rolodex \"),React.createElement(SearchBox,{placeholder:\"search robots\"/*setState is asynchronous, a second argument function allows to get response right after setting state*/,handleChange:function handleChange(e){return _this3.setState({searchField:e.target.value});}}),React.createElement(CardList,{robots:filteredRobots}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/carrillosolache/Projects/robots-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","state","robots","searchField","fetch","then","response","json","users","setState","filteredRobots","filter","robot","name","toLowerCase","includes","e","target","value"],"mappings":"8oBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAASC,SAAT,KAA0B,8CAA1B,CAEA,MAAO,WAAP,CAEA;GACMC,CAAAA,G,6DACJ;AACA,cAAc,qCACZ;AACA,uEACE,MAAKC,KAAL,CAAa,CACXC,MAAM,CAAE,EADG,CAEXC,WAAW,CAAE,EAFF,CAAb,CAHU,aAOb,CACD;6EACoB,iBAClB;AACAC,KAAK,CAAC,0CAAD,CACH;AADF,CAEGC,IAFH,CAEQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAFhB,CAGE;AAHF,CAIGF,IAJH,CAIQ,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEP,MAAM,CAAEM,KAAV,CAAd,CAAJ,EAJb,EAKD,C,uCAES,iBACR;AADQ,gBAEwB,KAAKP,KAF7B,CAEAC,MAFA,aAEAA,MAFA,CAEQC,WAFR,aAEQA,WAFR,CAGR;AACA,GAAMO,CAAAA,cAAc,CAAGR,MAAM,CAACS,MAAP,CAAc,SAAAC,KAAK,QACxC;AACAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCZ,WAAW,CAACW,WAAZ,EAAlC,CAFwC,GAAnB,CAAvB,CAIA,MACE,4BAAK,SAAS,CAAC,KAAf,EAEE,iDAFF,CAGE,oBAAC,SAAD,EACE,WAAW,CAAC,eACZ,yGAFF,CAGE,YAAY,CAAE,sBAAAE,CAAC,QAAI,CAAA,MAAI,CAACP,QAAL,CAAc,CAAEN,WAAW,CAAEa,CAAC,CAACC,MAAF,CAASC,KAAxB,CAAd,CAAJ,EAHjB,EAHF,CASE,oBAAC,QAAD,EAAU,MAAM,CAAER,cAAlB,EATF,CADF,CAaD,C,iBAzCeb,S,EA4ClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport './App.css';\n\n//class component allows you to display dynamic content\nclass App extends Component {\n  //state => object with properties that can br accesed from anywhere within the class\n  constructor() {\n    //super calls the crostructor method on the component and give us access to this state\n    super();\n      this.state = {\n        robots: [],\n        searchField: \"\"\n      }; \n  }\n  //renders component into dom/calls block of code\n  componentDidMount() {\n    //returns a promise/fetch users from API\n    fetch(\"https:jsonplaceholder.typicode.com/users\")\n      //returns response in json format for JS to understand\n      .then(response => response.json())\n      //returns new promise with body of users arr/updates robots property with users arr\n      .then(users => this.setState({ robots: users }));\n  }\n  \n  render () {\n    //distructuring allows to pull properties off of state/set them to constants inside bracket notation\n    const { robots, searchField } = this.state;\n    //filter method gets a new arr based on passed in function \n    const filteredRobots = robots.filter(robot =>\n      //toLowecase allows search not to be caseSensative/includes checks string value is in the called string \n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        {/*onChange fires syncteric event (e) when input value is change*/ }\n        <h1> Robots Rolodex </h1>\n        <SearchBox \n          placeholder=\"search robots\"\n          /*setState is asynchronous, a second argument function allows to get response right after setting state*/          \n          handleChange={e => this.setState({ searchField: e.target.value })}\n        />\n        {/*props => parameter pass in CardList/logs out object of properties into component*/}\n        <CardList robots={filteredRobots} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}